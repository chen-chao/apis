// Code generated by protoc-gen-go. DO NOT EDIT.
// source: translation/v1/translation.proto

package translation

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import v1 "google.golang.org/genproto/googleapis/cloud/speech/v1"
import status "google.golang.org/genproto/googleapis/rpc/status"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The canonical error codes for StreamingTranslationTaskResponse
type StreamingTranslationTaskCode int32

const (
	// The first enum value must be zero in proto3.
	StreamingTranslationTaskCode_OK StreamingTranslationTaskCode = 0
	// instruct client to continue sending audio data
	StreamingTranslationTaskCode_CONTINUE StreamingTranslationTaskCode = 9100
	// instruct client to skip sending audio data
	StreamingTranslationTaskCode_SKIP_AUDIO StreamingTranslationTaskCode = 9101
)

var StreamingTranslationTaskCode_name = map[int32]string{
	0:    "OK",
	9100: "CONTINUE",
	9101: "SKIP_AUDIO",
}
var StreamingTranslationTaskCode_value = map[string]int32{
	"OK":         0,
	"CONTINUE":   9100,
	"SKIP_AUDIO": 9101,
}

func (x StreamingTranslationTaskCode) String() string {
	return proto.EnumName(StreamingTranslationTaskCode_name, int32(x))
}
func (StreamingTranslationTaskCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{0}
}

type MediaTranslationRequest struct {
	// Media Identity
	MediaIdentity string `protobuf:"bytes,1,opt,name=media_identity,json=mediaIdentity,proto3" json:"media_identity,omitempty"`
	// target language
	// ISO-639-1 Code https://cloud.google.com/translate/docs/languages
	LanguageCode string `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	// the format of the transcripts
	Format string `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	// position of the transcript relative to the begginning of the audio or video
	StartTime float64 `protobuf:"fixed64,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// hints or keywords for more possible results
	Hints                string   `protobuf:"bytes,7,opt,name=hints,proto3" json:"hints,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MediaTranslationRequest) Reset()         { *m = MediaTranslationRequest{} }
func (m *MediaTranslationRequest) String() string { return proto.CompactTextString(m) }
func (*MediaTranslationRequest) ProtoMessage()    {}
func (*MediaTranslationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{0}
}
func (m *MediaTranslationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediaTranslationRequest.Unmarshal(m, b)
}
func (m *MediaTranslationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediaTranslationRequest.Marshal(b, m, deterministic)
}
func (dst *MediaTranslationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediaTranslationRequest.Merge(dst, src)
}
func (m *MediaTranslationRequest) XXX_Size() int {
	return xxx_messageInfo_MediaTranslationRequest.Size(m)
}
func (m *MediaTranslationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MediaTranslationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MediaTranslationRequest proto.InternalMessageInfo

func (m *MediaTranslationRequest) GetMediaIdentity() string {
	if m != nil {
		return m.MediaIdentity
	}
	return ""
}

func (m *MediaTranslationRequest) GetLanguageCode() string {
	if m != nil {
		return m.LanguageCode
	}
	return ""
}

func (m *MediaTranslationRequest) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *MediaTranslationRequest) GetStartTime() float64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *MediaTranslationRequest) GetHints() string {
	if m != nil {
		return m.Hints
	}
	return ""
}

type MediaTranslationResponse struct {
	// *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status] message that
	// specifies the error for the operation.
	// return 404 if no result, in this case, client should use StreamingTranslationRequest
	Error *status.Status `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// best translation results
	Results []*TranscriptInfo `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	// if there is a stream translation task running, return task id
	StreamTranslationTaskId string   `protobuf:"bytes,3,opt,name=stream_translation_task_id,json=streamTranslationTaskId,proto3" json:"stream_translation_task_id,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *MediaTranslationResponse) Reset()         { *m = MediaTranslationResponse{} }
func (m *MediaTranslationResponse) String() string { return proto.CompactTextString(m) }
func (*MediaTranslationResponse) ProtoMessage()    {}
func (*MediaTranslationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{1}
}
func (m *MediaTranslationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediaTranslationResponse.Unmarshal(m, b)
}
func (m *MediaTranslationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediaTranslationResponse.Marshal(b, m, deterministic)
}
func (dst *MediaTranslationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediaTranslationResponse.Merge(dst, src)
}
func (m *MediaTranslationResponse) XXX_Size() int {
	return xxx_messageInfo_MediaTranslationResponse.Size(m)
}
func (m *MediaTranslationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MediaTranslationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MediaTranslationResponse proto.InternalMessageInfo

func (m *MediaTranslationResponse) GetError() *status.Status {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *MediaTranslationResponse) GetResults() []*TranscriptInfo {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *MediaTranslationResponse) GetStreamTranslationTaskId() string {
	if m != nil {
		return m.StreamTranslationTaskId
	}
	return ""
}

type TranscriptInfo struct {
	// the identity, can be used in TranslationRequest
	TranscriptIdentity string `protobuf:"bytes,1,opt,name=transcript_identity,json=transcriptIdentity,proto3" json:"transcript_identity,omitempty"`
	// ISO-639-1 Code https://cloud.google.com/translate/docs/languages
	LanguageCode string `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	// actually we should use as "confidence"
	// use "ranking" for back ward competibility
	Ranking float32 `protobuf:"fixed32,3,opt,name=ranking,proto3" json:"ranking,omitempty"`
	// maybe: "ai" - result from ai tranlation
	// "edited" - result from user contribution
	Tags []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	// in ms, can be +/-
	Delay int64 `protobuf:"varint,5,opt,name=delay,proto3" json:"delay,omitempty"`
	// the confidence of the quality of the translation
	Confidence           float32  `protobuf:"fixed32,6,opt,name=confidence,proto3" json:"confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TranscriptInfo) Reset()         { *m = TranscriptInfo{} }
func (m *TranscriptInfo) String() string { return proto.CompactTextString(m) }
func (*TranscriptInfo) ProtoMessage()    {}
func (*TranscriptInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{2}
}
func (m *TranscriptInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TranscriptInfo.Unmarshal(m, b)
}
func (m *TranscriptInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TranscriptInfo.Marshal(b, m, deterministic)
}
func (dst *TranscriptInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TranscriptInfo.Merge(dst, src)
}
func (m *TranscriptInfo) XXX_Size() int {
	return xxx_messageInfo_TranscriptInfo.Size(m)
}
func (m *TranscriptInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TranscriptInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TranscriptInfo proto.InternalMessageInfo

func (m *TranscriptInfo) GetTranscriptIdentity() string {
	if m != nil {
		return m.TranscriptIdentity
	}
	return ""
}

func (m *TranscriptInfo) GetLanguageCode() string {
	if m != nil {
		return m.LanguageCode
	}
	return ""
}

func (m *TranscriptInfo) GetRanking() float32 {
	if m != nil {
		return m.Ranking
	}
	return 0
}

func (m *TranscriptInfo) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *TranscriptInfo) GetDelay() int64 {
	if m != nil {
		return m.Delay
	}
	return 0
}

func (m *TranscriptInfo) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

type DetectionRequest struct {
	// the text to be detect
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetectionRequest) Reset()         { *m = DetectionRequest{} }
func (m *DetectionRequest) String() string { return proto.CompactTextString(m) }
func (*DetectionRequest) ProtoMessage()    {}
func (*DetectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{3}
}
func (m *DetectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectionRequest.Unmarshal(m, b)
}
func (m *DetectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectionRequest.Marshal(b, m, deterministic)
}
func (dst *DetectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectionRequest.Merge(dst, src)
}
func (m *DetectionRequest) XXX_Size() int {
	return xxx_messageInfo_DetectionRequest.Size(m)
}
func (m *DetectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DetectionRequest proto.InternalMessageInfo

func (m *DetectionRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type DetectionResponse struct {
	// there might be more than one prediction
	Prediction           []*DetectionPrediction `protobuf:"bytes,1,rep,name=prediction,proto3" json:"prediction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DetectionResponse) Reset()         { *m = DetectionResponse{} }
func (m *DetectionResponse) String() string { return proto.CompactTextString(m) }
func (*DetectionResponse) ProtoMessage()    {}
func (*DetectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{4}
}
func (m *DetectionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectionResponse.Unmarshal(m, b)
}
func (m *DetectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectionResponse.Marshal(b, m, deterministic)
}
func (dst *DetectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectionResponse.Merge(dst, src)
}
func (m *DetectionResponse) XXX_Size() int {
	return xxx_messageInfo_DetectionResponse.Size(m)
}
func (m *DetectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DetectionResponse proto.InternalMessageInfo

func (m *DetectionResponse) GetPrediction() []*DetectionPrediction {
	if m != nil {
		return m.Prediction
	}
	return nil
}

type DetectionPrediction struct {
	// *Output-only* the language code of the detection result
	LanguageCode string `protobuf:"bytes,1,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	// *Output-only* The confidence estimate between 0.0 and 1.0. A higher number
	// indicates an estimated greater likelihood that the detection result are
	// correct.
	Confidence           float32  `protobuf:"fixed32,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetectionPrediction) Reset()         { *m = DetectionPrediction{} }
func (m *DetectionPrediction) String() string { return proto.CompactTextString(m) }
func (*DetectionPrediction) ProtoMessage()    {}
func (*DetectionPrediction) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{5}
}
func (m *DetectionPrediction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectionPrediction.Unmarshal(m, b)
}
func (m *DetectionPrediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectionPrediction.Marshal(b, m, deterministic)
}
func (dst *DetectionPrediction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectionPrediction.Merge(dst, src)
}
func (m *DetectionPrediction) XXX_Size() int {
	return xxx_messageInfo_DetectionPrediction.Size(m)
}
func (m *DetectionPrediction) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectionPrediction.DiscardUnknown(m)
}

var xxx_messageInfo_DetectionPrediction proto.InternalMessageInfo

func (m *DetectionPrediction) GetLanguageCode() string {
	if m != nil {
		return m.LanguageCode
	}
	return ""
}

func (m *DetectionPrediction) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

type TranscriptRequest struct {
	// oneof case 2
	// return translate result by transcript_identity
	TranscriptIdentity string `protobuf:"bytes,4,opt,name=transcript_identity,json=transcriptIdentity,proto3" json:"transcript_identity,omitempty"`
	// position of the transcript relative to the begginning of the audio or video
	StartTime            float64  `protobuf:"fixed64,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TranscriptRequest) Reset()         { *m = TranscriptRequest{} }
func (m *TranscriptRequest) String() string { return proto.CompactTextString(m) }
func (*TranscriptRequest) ProtoMessage()    {}
func (*TranscriptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{6}
}
func (m *TranscriptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TranscriptRequest.Unmarshal(m, b)
}
func (m *TranscriptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TranscriptRequest.Marshal(b, m, deterministic)
}
func (dst *TranscriptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TranscriptRequest.Merge(dst, src)
}
func (m *TranscriptRequest) XXX_Size() int {
	return xxx_messageInfo_TranscriptRequest.Size(m)
}
func (m *TranscriptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TranscriptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TranscriptRequest proto.InternalMessageInfo

func (m *TranscriptRequest) GetTranscriptIdentity() string {
	if m != nil {
		return m.TranscriptIdentity
	}
	return ""
}

func (m *TranscriptRequest) GetStartTime() float64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

type TranscriptResponse struct {
	Error *status.Status `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// each line of the transcript
	Transcripts []*TranscriptResponse_Cue `protobuf:"bytes,2,rep,name=transcripts,proto3" json:"transcripts,omitempty"`
	// if transcripts ended in this result
	IsEndOfTranscript    bool     `protobuf:"varint,3,opt,name=is_end_of_transcript,json=isEndOfTranscript,proto3" json:"is_end_of_transcript,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TranscriptResponse) Reset()         { *m = TranscriptResponse{} }
func (m *TranscriptResponse) String() string { return proto.CompactTextString(m) }
func (*TranscriptResponse) ProtoMessage()    {}
func (*TranscriptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{7}
}
func (m *TranscriptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TranscriptResponse.Unmarshal(m, b)
}
func (m *TranscriptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TranscriptResponse.Marshal(b, m, deterministic)
}
func (dst *TranscriptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TranscriptResponse.Merge(dst, src)
}
func (m *TranscriptResponse) XXX_Size() int {
	return xxx_messageInfo_TranscriptResponse.Size(m)
}
func (m *TranscriptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TranscriptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TranscriptResponse proto.InternalMessageInfo

func (m *TranscriptResponse) GetError() *status.Status {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *TranscriptResponse) GetTranscripts() []*TranscriptResponse_Cue {
	if m != nil {
		return m.Transcripts
	}
	return nil
}

func (m *TranscriptResponse) GetIsEndOfTranscript() bool {
	if m != nil {
		return m.IsEndOfTranscript
	}
	return false
}

type TranscriptResponse_Cue struct {
	// the start and end of the transcripts
	StartTime            float64  `protobuf:"fixed64,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              float64  `protobuf:"fixed64,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TranscriptResponse_Cue) Reset()         { *m = TranscriptResponse_Cue{} }
func (m *TranscriptResponse_Cue) String() string { return proto.CompactTextString(m) }
func (*TranscriptResponse_Cue) ProtoMessage()    {}
func (*TranscriptResponse_Cue) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{7, 0}
}
func (m *TranscriptResponse_Cue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TranscriptResponse_Cue.Unmarshal(m, b)
}
func (m *TranscriptResponse_Cue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TranscriptResponse_Cue.Marshal(b, m, deterministic)
}
func (dst *TranscriptResponse_Cue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TranscriptResponse_Cue.Merge(dst, src)
}
func (m *TranscriptResponse_Cue) XXX_Size() int {
	return xxx_messageInfo_TranscriptResponse_Cue.Size(m)
}
func (m *TranscriptResponse_Cue) XXX_DiscardUnknown() {
	xxx_messageInfo_TranscriptResponse_Cue.DiscardUnknown(m)
}

var xxx_messageInfo_TranscriptResponse_Cue proto.InternalMessageInfo

func (m *TranscriptResponse_Cue) GetStartTime() float64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *TranscriptResponse_Cue) GetEndTime() float64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *TranscriptResponse_Cue) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

// The top-level message sent by the client for the `StreamingTranslation` method.
// Multiple `StreamingTranslationRequest` messages are sent. The first message
// must contain a `streaming_config` message
// and must not contain `audio` data.
// All subsequent messages must contain `audio` data and must not contain a
// `streaming_config` message.
type StreamingTranslationRequest struct {
	// The streaming request, which is either a streaming config or audio content.
	//
	// Types that are valid to be assigned to StreamingRequest:
	//	*StreamingTranslationRequest_StreamingConfig
	//	*StreamingTranslationRequest_AudioContent
	StreamingRequest     isStreamingTranslationRequest_StreamingRequest `protobuf_oneof:"streaming_request"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *StreamingTranslationRequest) Reset()         { *m = StreamingTranslationRequest{} }
func (m *StreamingTranslationRequest) String() string { return proto.CompactTextString(m) }
func (*StreamingTranslationRequest) ProtoMessage()    {}
func (*StreamingTranslationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{8}
}
func (m *StreamingTranslationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingTranslationRequest.Unmarshal(m, b)
}
func (m *StreamingTranslationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingTranslationRequest.Marshal(b, m, deterministic)
}
func (dst *StreamingTranslationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingTranslationRequest.Merge(dst, src)
}
func (m *StreamingTranslationRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingTranslationRequest.Size(m)
}
func (m *StreamingTranslationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingTranslationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingTranslationRequest proto.InternalMessageInfo

type isStreamingTranslationRequest_StreamingRequest interface {
	isStreamingTranslationRequest_StreamingRequest()
}

type StreamingTranslationRequest_StreamingConfig struct {
	StreamingConfig *StreamingTranslationRequestConfig `protobuf:"bytes,1,opt,name=streaming_config,json=streamingConfig,proto3,oneof"`
}
type StreamingTranslationRequest_AudioContent struct {
	AudioContent []byte `protobuf:"bytes,2,opt,name=audio_content,json=audioContent,proto3,oneof"`
}

func (*StreamingTranslationRequest_StreamingConfig) isStreamingTranslationRequest_StreamingRequest() {}
func (*StreamingTranslationRequest_AudioContent) isStreamingTranslationRequest_StreamingRequest()    {}

func (m *StreamingTranslationRequest) GetStreamingRequest() isStreamingTranslationRequest_StreamingRequest {
	if m != nil {
		return m.StreamingRequest
	}
	return nil
}

func (m *StreamingTranslationRequest) GetStreamingConfig() *StreamingTranslationRequestConfig {
	if x, ok := m.GetStreamingRequest().(*StreamingTranslationRequest_StreamingConfig); ok {
		return x.StreamingConfig
	}
	return nil
}

func (m *StreamingTranslationRequest) GetAudioContent() []byte {
	if x, ok := m.GetStreamingRequest().(*StreamingTranslationRequest_AudioContent); ok {
		return x.AudioContent
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*StreamingTranslationRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _StreamingTranslationRequest_OneofMarshaler, _StreamingTranslationRequest_OneofUnmarshaler, _StreamingTranslationRequest_OneofSizer, []interface{}{
		(*StreamingTranslationRequest_StreamingConfig)(nil),
		(*StreamingTranslationRequest_AudioContent)(nil),
	}
}

func _StreamingTranslationRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*StreamingTranslationRequest)
	// streaming_request
	switch x := m.StreamingRequest.(type) {
	case *StreamingTranslationRequest_StreamingConfig:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StreamingConfig); err != nil {
			return err
		}
	case *StreamingTranslationRequest_AudioContent:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.AudioContent)
	case nil:
	default:
		return fmt.Errorf("StreamingTranslationRequest.StreamingRequest has unexpected type %T", x)
	}
	return nil
}

func _StreamingTranslationRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*StreamingTranslationRequest)
	switch tag {
	case 1: // streaming_request.streaming_config
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StreamingTranslationRequestConfig)
		err := b.DecodeMessage(msg)
		m.StreamingRequest = &StreamingTranslationRequest_StreamingConfig{msg}
		return true, err
	case 2: // streaming_request.audio_content
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.StreamingRequest = &StreamingTranslationRequest_AudioContent{x}
		return true, err
	default:
		return false, nil
	}
}

func _StreamingTranslationRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*StreamingTranslationRequest)
	// streaming_request
	switch x := m.StreamingRequest.(type) {
	case *StreamingTranslationRequest_StreamingConfig:
		s := proto.Size(x.StreamingConfig)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StreamingTranslationRequest_AudioContent:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.AudioContent)))
		n += len(x.AudioContent)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type StreamingTranslationRequestConfig struct {
	// Provides information to the recognizer that specifies how to process the
	// request. The first `StreamingTranslationRequest` message must contain a
	// `streaming_config`  message.
	StreamingConfig *v1.RecognitionConfig `protobuf:"bytes,1,opt,name=streaming_config,json=streamingConfig,proto3" json:"streaming_config,omitempty"`
	// the media identity
	MediaIdentity string `protobuf:"bytes,2,opt,name=media_identity,json=mediaIdentity,proto3" json:"media_identity,omitempty"`
	// the language code of the audio
	// ISO-639-1 Code https://cloud.google.com/translate/docs/languages
	AudioLanguageCode string `protobuf:"bytes,3,opt,name=audio_language_code,json=audioLanguageCode,proto3" json:"audio_language_code,omitempty"`
	// ISO-639-1 Code https://cloud.google.com/translate/docs/languages
	TargetLanguageCode   string   `protobuf:"bytes,4,opt,name=target_language_code,json=targetLanguageCode,proto3" json:"target_language_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingTranslationRequestConfig) Reset()         { *m = StreamingTranslationRequestConfig{} }
func (m *StreamingTranslationRequestConfig) String() string { return proto.CompactTextString(m) }
func (*StreamingTranslationRequestConfig) ProtoMessage()    {}
func (*StreamingTranslationRequestConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{9}
}
func (m *StreamingTranslationRequestConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingTranslationRequestConfig.Unmarshal(m, b)
}
func (m *StreamingTranslationRequestConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingTranslationRequestConfig.Marshal(b, m, deterministic)
}
func (dst *StreamingTranslationRequestConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingTranslationRequestConfig.Merge(dst, src)
}
func (m *StreamingTranslationRequestConfig) XXX_Size() int {
	return xxx_messageInfo_StreamingTranslationRequestConfig.Size(m)
}
func (m *StreamingTranslationRequestConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingTranslationRequestConfig.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingTranslationRequestConfig proto.InternalMessageInfo

func (m *StreamingTranslationRequestConfig) GetStreamingConfig() *v1.RecognitionConfig {
	if m != nil {
		return m.StreamingConfig
	}
	return nil
}

func (m *StreamingTranslationRequestConfig) GetMediaIdentity() string {
	if m != nil {
		return m.MediaIdentity
	}
	return ""
}

func (m *StreamingTranslationRequestConfig) GetAudioLanguageCode() string {
	if m != nil {
		return m.AudioLanguageCode
	}
	return ""
}

func (m *StreamingTranslationRequestConfig) GetTargetLanguageCode() string {
	if m != nil {
		return m.TargetLanguageCode
	}
	return ""
}

// The top-level message sent by server for the `StreamingTranslation` method.
// Multiple `StreamingTranslationResponse` messages may be sent.
type StreamingTranslationResponse struct {
	// *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status] message that
	// specifies the error for the operation.
	Error *status.Status `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// streaming_response must be one of following
	//
	// Types that are valid to be assigned to StreamingResponse:
	//	*StreamingTranslationResponse_StreamingResult
	//	*StreamingTranslationResponse_Taskinfo
	//	*StreamingTranslationResponse_TranscriptResult
	StreamingResponse    isStreamingTranslationResponse_StreamingResponse `protobuf_oneof:"streaming_response"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *StreamingTranslationResponse) Reset()         { *m = StreamingTranslationResponse{} }
func (m *StreamingTranslationResponse) String() string { return proto.CompactTextString(m) }
func (*StreamingTranslationResponse) ProtoMessage()    {}
func (*StreamingTranslationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{10}
}
func (m *StreamingTranslationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingTranslationResponse.Unmarshal(m, b)
}
func (m *StreamingTranslationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingTranslationResponse.Marshal(b, m, deterministic)
}
func (dst *StreamingTranslationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingTranslationResponse.Merge(dst, src)
}
func (m *StreamingTranslationResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingTranslationResponse.Size(m)
}
func (m *StreamingTranslationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingTranslationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingTranslationResponse proto.InternalMessageInfo

type isStreamingTranslationResponse_StreamingResponse interface {
	isStreamingTranslationResponse_StreamingResponse()
}

type StreamingTranslationResponse_StreamingResult struct {
	StreamingResult *StreamingTranslationResult `protobuf:"bytes,2,opt,name=streaming_result,json=streamingResult,proto3,oneof"`
}
type StreamingTranslationResponse_Taskinfo struct {
	Taskinfo *StreamingTranslationTaskInfo `protobuf:"bytes,3,opt,name=taskinfo,proto3,oneof"`
}
type StreamingTranslationResponse_TranscriptResult struct {
	TranscriptResult *TranscriptInfo `protobuf:"bytes,4,opt,name=transcript_result,json=transcriptResult,proto3,oneof"`
}

func (*StreamingTranslationResponse_StreamingResult) isStreamingTranslationResponse_StreamingResponse() {
}
func (*StreamingTranslationResponse_Taskinfo) isStreamingTranslationResponse_StreamingResponse() {}
func (*StreamingTranslationResponse_TranscriptResult) isStreamingTranslationResponse_StreamingResponse() {
}

func (m *StreamingTranslationResponse) GetStreamingResponse() isStreamingTranslationResponse_StreamingResponse {
	if m != nil {
		return m.StreamingResponse
	}
	return nil
}

func (m *StreamingTranslationResponse) GetError() *status.Status {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *StreamingTranslationResponse) GetStreamingResult() *StreamingTranslationResult {
	if x, ok := m.GetStreamingResponse().(*StreamingTranslationResponse_StreamingResult); ok {
		return x.StreamingResult
	}
	return nil
}

func (m *StreamingTranslationResponse) GetTaskinfo() *StreamingTranslationTaskInfo {
	if x, ok := m.GetStreamingResponse().(*StreamingTranslationResponse_Taskinfo); ok {
		return x.Taskinfo
	}
	return nil
}

func (m *StreamingTranslationResponse) GetTranscriptResult() *TranscriptInfo {
	if x, ok := m.GetStreamingResponse().(*StreamingTranslationResponse_TranscriptResult); ok {
		return x.TranscriptResult
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*StreamingTranslationResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _StreamingTranslationResponse_OneofMarshaler, _StreamingTranslationResponse_OneofUnmarshaler, _StreamingTranslationResponse_OneofSizer, []interface{}{
		(*StreamingTranslationResponse_StreamingResult)(nil),
		(*StreamingTranslationResponse_Taskinfo)(nil),
		(*StreamingTranslationResponse_TranscriptResult)(nil),
	}
}

func _StreamingTranslationResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*StreamingTranslationResponse)
	// streaming_response
	switch x := m.StreamingResponse.(type) {
	case *StreamingTranslationResponse_StreamingResult:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StreamingResult); err != nil {
			return err
		}
	case *StreamingTranslationResponse_Taskinfo:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Taskinfo); err != nil {
			return err
		}
	case *StreamingTranslationResponse_TranscriptResult:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TranscriptResult); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("StreamingTranslationResponse.StreamingResponse has unexpected type %T", x)
	}
	return nil
}

func _StreamingTranslationResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*StreamingTranslationResponse)
	switch tag {
	case 2: // streaming_response.streaming_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StreamingTranslationResult)
		err := b.DecodeMessage(msg)
		m.StreamingResponse = &StreamingTranslationResponse_StreamingResult{msg}
		return true, err
	case 3: // streaming_response.taskinfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StreamingTranslationTaskInfo)
		err := b.DecodeMessage(msg)
		m.StreamingResponse = &StreamingTranslationResponse_Taskinfo{msg}
		return true, err
	case 4: // streaming_response.transcript_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TranscriptInfo)
		err := b.DecodeMessage(msg)
		m.StreamingResponse = &StreamingTranslationResponse_TranscriptResult{msg}
		return true, err
	default:
		return false, nil
	}
}

func _StreamingTranslationResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*StreamingTranslationResponse)
	// streaming_response
	switch x := m.StreamingResponse.(type) {
	case *StreamingTranslationResponse_StreamingResult:
		s := proto.Size(x.StreamingResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StreamingTranslationResponse_Taskinfo:
		s := proto.Size(x.Taskinfo)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StreamingTranslationResponse_TranscriptResult:
		s := proto.Size(x.TranscriptResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// the StreamingTranslationTask id that created by the `StreamingTranslation` method.
type StreamingTranslationTaskRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingTranslationTaskRequest) Reset()         { *m = StreamingTranslationTaskRequest{} }
func (m *StreamingTranslationTaskRequest) String() string { return proto.CompactTextString(m) }
func (*StreamingTranslationTaskRequest) ProtoMessage()    {}
func (*StreamingTranslationTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{11}
}
func (m *StreamingTranslationTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingTranslationTaskRequest.Unmarshal(m, b)
}
func (m *StreamingTranslationTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingTranslationTaskRequest.Marshal(b, m, deterministic)
}
func (dst *StreamingTranslationTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingTranslationTaskRequest.Merge(dst, src)
}
func (m *StreamingTranslationTaskRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingTranslationTaskRequest.Size(m)
}
func (m *StreamingTranslationTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingTranslationTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingTranslationTaskRequest proto.InternalMessageInfo

func (m *StreamingTranslationTaskRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

// the translated TranscriptInfo or `StreamingTranslationTaskInfo`
type StreamingTranslationTaskResponse struct {
	// maybe be:
	// StreamingTranslationTaskCode.CONTINUE
	// StreamingTranslationTaskCode.SKIP_AUDIO
	Error *status.Status `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// Types that are valid to be assigned to StreamingRequest:
	//	*StreamingTranslationTaskResponse_Taskinfo
	//	*StreamingTranslationTaskResponse_Transcriptinfo
	StreamingRequest     isStreamingTranslationTaskResponse_StreamingRequest `protobuf_oneof:"streaming_request"`
	XXX_NoUnkeyedLiteral struct{}                                            `json:"-"`
	XXX_unrecognized     []byte                                              `json:"-"`
	XXX_sizecache        int32                                               `json:"-"`
}

func (m *StreamingTranslationTaskResponse) Reset()         { *m = StreamingTranslationTaskResponse{} }
func (m *StreamingTranslationTaskResponse) String() string { return proto.CompactTextString(m) }
func (*StreamingTranslationTaskResponse) ProtoMessage()    {}
func (*StreamingTranslationTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{12}
}
func (m *StreamingTranslationTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingTranslationTaskResponse.Unmarshal(m, b)
}
func (m *StreamingTranslationTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingTranslationTaskResponse.Marshal(b, m, deterministic)
}
func (dst *StreamingTranslationTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingTranslationTaskResponse.Merge(dst, src)
}
func (m *StreamingTranslationTaskResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingTranslationTaskResponse.Size(m)
}
func (m *StreamingTranslationTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingTranslationTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingTranslationTaskResponse proto.InternalMessageInfo

type isStreamingTranslationTaskResponse_StreamingRequest interface {
	isStreamingTranslationTaskResponse_StreamingRequest()
}

type StreamingTranslationTaskResponse_Taskinfo struct {
	Taskinfo *StreamingTranslationTaskInfo `protobuf:"bytes,2,opt,name=taskinfo,proto3,oneof"`
}
type StreamingTranslationTaskResponse_Transcriptinfo struct {
	Transcriptinfo *TranscriptInfo `protobuf:"bytes,3,opt,name=transcriptinfo,proto3,oneof"`
}

func (*StreamingTranslationTaskResponse_Taskinfo) isStreamingTranslationTaskResponse_StreamingRequest() {
}
func (*StreamingTranslationTaskResponse_Transcriptinfo) isStreamingTranslationTaskResponse_StreamingRequest() {
}

func (m *StreamingTranslationTaskResponse) GetStreamingRequest() isStreamingTranslationTaskResponse_StreamingRequest {
	if m != nil {
		return m.StreamingRequest
	}
	return nil
}

func (m *StreamingTranslationTaskResponse) GetError() *status.Status {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *StreamingTranslationTaskResponse) GetTaskinfo() *StreamingTranslationTaskInfo {
	if x, ok := m.GetStreamingRequest().(*StreamingTranslationTaskResponse_Taskinfo); ok {
		return x.Taskinfo
	}
	return nil
}

func (m *StreamingTranslationTaskResponse) GetTranscriptinfo() *TranscriptInfo {
	if x, ok := m.GetStreamingRequest().(*StreamingTranslationTaskResponse_Transcriptinfo); ok {
		return x.Transcriptinfo
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*StreamingTranslationTaskResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _StreamingTranslationTaskResponse_OneofMarshaler, _StreamingTranslationTaskResponse_OneofUnmarshaler, _StreamingTranslationTaskResponse_OneofSizer, []interface{}{
		(*StreamingTranslationTaskResponse_Taskinfo)(nil),
		(*StreamingTranslationTaskResponse_Transcriptinfo)(nil),
	}
}

func _StreamingTranslationTaskResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*StreamingTranslationTaskResponse)
	// streaming_request
	switch x := m.StreamingRequest.(type) {
	case *StreamingTranslationTaskResponse_Taskinfo:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Taskinfo); err != nil {
			return err
		}
	case *StreamingTranslationTaskResponse_Transcriptinfo:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Transcriptinfo); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("StreamingTranslationTaskResponse.StreamingRequest has unexpected type %T", x)
	}
	return nil
}

func _StreamingTranslationTaskResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*StreamingTranslationTaskResponse)
	switch tag {
	case 2: // streaming_request.taskinfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StreamingTranslationTaskInfo)
		err := b.DecodeMessage(msg)
		m.StreamingRequest = &StreamingTranslationTaskResponse_Taskinfo{msg}
		return true, err
	case 3: // streaming_request.transcriptinfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TranscriptInfo)
		err := b.DecodeMessage(msg)
		m.StreamingRequest = &StreamingTranslationTaskResponse_Transcriptinfo{msg}
		return true, err
	default:
		return false, nil
	}
}

func _StreamingTranslationTaskResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*StreamingTranslationTaskResponse)
	// streaming_request
	switch x := m.StreamingRequest.(type) {
	case *StreamingTranslationTaskResponse_Taskinfo:
		s := proto.Size(x.Taskinfo)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StreamingTranslationTaskResponse_Transcriptinfo:
		s := proto.Size(x.Transcriptinfo)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// the StreamingTranslationTask that created by the `StreamingTranslation` method.
type StreamingTranslationTaskInfo struct {
	// this task id can be used for farther inquiry
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// this is the estimated finished time, the task is finished if the time is zero
	// or less
	EstimateTime         float64  `protobuf:"fixed64,2,opt,name=estimate_time,json=estimateTime,proto3" json:"estimate_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingTranslationTaskInfo) Reset()         { *m = StreamingTranslationTaskInfo{} }
func (m *StreamingTranslationTaskInfo) String() string { return proto.CompactTextString(m) }
func (*StreamingTranslationTaskInfo) ProtoMessage()    {}
func (*StreamingTranslationTaskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{13}
}
func (m *StreamingTranslationTaskInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingTranslationTaskInfo.Unmarshal(m, b)
}
func (m *StreamingTranslationTaskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingTranslationTaskInfo.Marshal(b, m, deterministic)
}
func (dst *StreamingTranslationTaskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingTranslationTaskInfo.Merge(dst, src)
}
func (m *StreamingTranslationTaskInfo) XXX_Size() int {
	return xxx_messageInfo_StreamingTranslationTaskInfo.Size(m)
}
func (m *StreamingTranslationTaskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingTranslationTaskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingTranslationTaskInfo proto.InternalMessageInfo

func (m *StreamingTranslationTaskInfo) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *StreamingTranslationTaskInfo) GetEstimateTime() float64 {
	if m != nil {
		return m.EstimateTime
	}
	return 0
}

type StreamingTranslationResult struct {
	// *Output-only* Transcript text representing the words that the user spoke.
	Transcript string `protobuf:"bytes,1,opt,name=transcript,proto3" json:"transcript,omitempty"`
	// *Output-only* The confidence estimate between 0.0 and 1.0. A higher number
	// indicates an estimated greater likelihood that the recognized words are
	// correct. This field is typically provided only for the top hypothesis, and
	// only for `is_final=true` results. Clients should not rely on the
	// `confidence` field as it is not guaranteed to be accurate or consistent.
	// The default of 0.0 is a sentinel value indicating `confidence` was not set.
	Confidence float32 `protobuf:"fixed32,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	// *Output-only* An estimate of the likelihood that the recognizer will not
	// change its guess about this interim result. Values range from 0.0
	// (completely unstable) to 1.0 (completely stable).
	// This field is only provided for interim results (`is_final=false`).
	// The default of 0.0 is a sentinel value indicating `stability` was not set.
	Stability float32 `protobuf:"fixed32,3,opt,name=stability,proto3" json:"stability,omitempty"`
	// *Output-only* Time offset relative to the beginning of the audio,
	// and corresponding to the start of the spoken word.
	// This field is only set if `enable_word_time_offsets=true` and only
	// in the top hypothesis.
	// This is an experimental feature and the accuracy of the time offset can
	// vary.
	StartTime float64 `protobuf:"fixed64,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// *Output-only* Time offset relative to the beginning of the audio,
	// and corresponding to the end of the spoken word.
	// This field is only set if `enable_word_time_offsets=true` and only
	// in the top hypothesis.
	// This is an experimental feature and the accuracy of the time offset can
	// vary.
	EndTime              float64  `protobuf:"fixed64,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingTranslationResult) Reset()         { *m = StreamingTranslationResult{} }
func (m *StreamingTranslationResult) String() string { return proto.CompactTextString(m) }
func (*StreamingTranslationResult) ProtoMessage()    {}
func (*StreamingTranslationResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{14}
}
func (m *StreamingTranslationResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingTranslationResult.Unmarshal(m, b)
}
func (m *StreamingTranslationResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingTranslationResult.Marshal(b, m, deterministic)
}
func (dst *StreamingTranslationResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingTranslationResult.Merge(dst, src)
}
func (m *StreamingTranslationResult) XXX_Size() int {
	return xxx_messageInfo_StreamingTranslationResult.Size(m)
}
func (m *StreamingTranslationResult) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingTranslationResult.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingTranslationResult proto.InternalMessageInfo

func (m *StreamingTranslationResult) GetTranscript() string {
	if m != nil {
		return m.Transcript
	}
	return ""
}

func (m *StreamingTranslationResult) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *StreamingTranslationResult) GetStability() float32 {
	if m != nil {
		return m.Stability
	}
	return 0
}

func (m *StreamingTranslationResult) GetStartTime() float64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *StreamingTranslationResult) GetEndTime() float64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

// We use Google Translation Service for text translation.
// Translation API Reference: https://cloud.google.com/translate/docs/reference/translate
type TextTranslationRequest struct {
	// The text to translate
	Text []string `protobuf:"bytes,1,rep,name=text,proto3" json:"text,omitempty"`
	// The language to use for translation of the text
	// ISO-639-1/bcp47 Code with tags
	// https://cloud.google.com/translate/docs/languages
	TargetLanguageCode string `protobuf:"bytes,2,opt,name=target_language_code,json=targetLanguageCode,proto3" json:"target_language_code,omitempty"`
	// The language of the source text
	// ISO-639-1/bcp47 Code with tags
	// https://cloud.google.com/translate/docs/languages
	SourceLanguageCode   string   `protobuf:"bytes,3,opt,name=source_language_code,json=sourceLanguageCode,proto3" json:"source_language_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextTranslationRequest) Reset()         { *m = TextTranslationRequest{} }
func (m *TextTranslationRequest) String() string { return proto.CompactTextString(m) }
func (*TextTranslationRequest) ProtoMessage()    {}
func (*TextTranslationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{15}
}
func (m *TextTranslationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextTranslationRequest.Unmarshal(m, b)
}
func (m *TextTranslationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextTranslationRequest.Marshal(b, m, deterministic)
}
func (dst *TextTranslationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextTranslationRequest.Merge(dst, src)
}
func (m *TextTranslationRequest) XXX_Size() int {
	return xxx_messageInfo_TextTranslationRequest.Size(m)
}
func (m *TextTranslationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TextTranslationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TextTranslationRequest proto.InternalMessageInfo

func (m *TextTranslationRequest) GetText() []string {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *TextTranslationRequest) GetTargetLanguageCode() string {
	if m != nil {
		return m.TargetLanguageCode
	}
	return ""
}

func (m *TextTranslationRequest) GetSourceLanguageCode() string {
	if m != nil {
		return m.SourceLanguageCode
	}
	return ""
}

type TextTranslationResponse struct {
	Error *status.Status `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// translation results for the requested text
	Results              []*TextTranslationResponse_Text `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *TextTranslationResponse) Reset()         { *m = TextTranslationResponse{} }
func (m *TextTranslationResponse) String() string { return proto.CompactTextString(m) }
func (*TextTranslationResponse) ProtoMessage()    {}
func (*TextTranslationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{16}
}
func (m *TextTranslationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextTranslationResponse.Unmarshal(m, b)
}
func (m *TextTranslationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextTranslationResponse.Marshal(b, m, deterministic)
}
func (dst *TextTranslationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextTranslationResponse.Merge(dst, src)
}
func (m *TextTranslationResponse) XXX_Size() int {
	return xxx_messageInfo_TextTranslationResponse.Size(m)
}
func (m *TextTranslationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TextTranslationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TextTranslationResponse proto.InternalMessageInfo

func (m *TextTranslationResponse) GetError() *status.Status {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *TextTranslationResponse) GetResults() []*TextTranslationResponse_Text {
	if m != nil {
		return m.Results
	}
	return nil
}

type TextTranslationResponse_Text struct {
	// The source language of the text detected
	// ISO-639-1/bcp47 Code with tags
	// https://cloud.google.com/translate/docs/languages
	SourceLanguage string `protobuf:"bytes,1,opt,name=source_language,json=sourceLanguage,proto3" json:"source_language,omitempty"`
	// The translated Text
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextTranslationResponse_Text) Reset()         { *m = TextTranslationResponse_Text{} }
func (m *TextTranslationResponse_Text) String() string { return proto.CompactTextString(m) }
func (*TextTranslationResponse_Text) ProtoMessage()    {}
func (*TextTranslationResponse_Text) Descriptor() ([]byte, []int) {
	return fileDescriptor_translation_d48680ae7b2d4c7e, []int{16, 0}
}
func (m *TextTranslationResponse_Text) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextTranslationResponse_Text.Unmarshal(m, b)
}
func (m *TextTranslationResponse_Text) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextTranslationResponse_Text.Marshal(b, m, deterministic)
}
func (dst *TextTranslationResponse_Text) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextTranslationResponse_Text.Merge(dst, src)
}
func (m *TextTranslationResponse_Text) XXX_Size() int {
	return xxx_messageInfo_TextTranslationResponse_Text.Size(m)
}
func (m *TextTranslationResponse_Text) XXX_DiscardUnknown() {
	xxx_messageInfo_TextTranslationResponse_Text.DiscardUnknown(m)
}

var xxx_messageInfo_TextTranslationResponse_Text proto.InternalMessageInfo

func (m *TextTranslationResponse_Text) GetSourceLanguage() string {
	if m != nil {
		return m.SourceLanguage
	}
	return ""
}

func (m *TextTranslationResponse_Text) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*MediaTranslationRequest)(nil), "sagittarius.translation.v1.MediaTranslationRequest")
	proto.RegisterType((*MediaTranslationResponse)(nil), "sagittarius.translation.v1.MediaTranslationResponse")
	proto.RegisterType((*TranscriptInfo)(nil), "sagittarius.translation.v1.TranscriptInfo")
	proto.RegisterType((*DetectionRequest)(nil), "sagittarius.translation.v1.DetectionRequest")
	proto.RegisterType((*DetectionResponse)(nil), "sagittarius.translation.v1.DetectionResponse")
	proto.RegisterType((*DetectionPrediction)(nil), "sagittarius.translation.v1.DetectionPrediction")
	proto.RegisterType((*TranscriptRequest)(nil), "sagittarius.translation.v1.TranscriptRequest")
	proto.RegisterType((*TranscriptResponse)(nil), "sagittarius.translation.v1.TranscriptResponse")
	proto.RegisterType((*TranscriptResponse_Cue)(nil), "sagittarius.translation.v1.TranscriptResponse.Cue")
	proto.RegisterType((*StreamingTranslationRequest)(nil), "sagittarius.translation.v1.StreamingTranslationRequest")
	proto.RegisterType((*StreamingTranslationRequestConfig)(nil), "sagittarius.translation.v1.StreamingTranslationRequestConfig")
	proto.RegisterType((*StreamingTranslationResponse)(nil), "sagittarius.translation.v1.StreamingTranslationResponse")
	proto.RegisterType((*StreamingTranslationTaskRequest)(nil), "sagittarius.translation.v1.StreamingTranslationTaskRequest")
	proto.RegisterType((*StreamingTranslationTaskResponse)(nil), "sagittarius.translation.v1.StreamingTranslationTaskResponse")
	proto.RegisterType((*StreamingTranslationTaskInfo)(nil), "sagittarius.translation.v1.StreamingTranslationTaskInfo")
	proto.RegisterType((*StreamingTranslationResult)(nil), "sagittarius.translation.v1.StreamingTranslationResult")
	proto.RegisterType((*TextTranslationRequest)(nil), "sagittarius.translation.v1.TextTranslationRequest")
	proto.RegisterType((*TextTranslationResponse)(nil), "sagittarius.translation.v1.TextTranslationResponse")
	proto.RegisterType((*TextTranslationResponse_Text)(nil), "sagittarius.translation.v1.TextTranslationResponse.Text")
	proto.RegisterEnum("sagittarius.translation.v1.StreamingTranslationTaskCode", StreamingTranslationTaskCode_name, StreamingTranslationTaskCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TranslationClient is the client API for Translation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TranslationClient interface {
	// Translate media(audio or video) by media identity
	TranslateMedia(ctx context.Context, in *MediaTranslationRequest, opts ...grpc.CallOption) (*MediaTranslationResponse, error)
	// detect the language of text
	DetectLanguage(ctx context.Context, in *DetectionRequest, opts ...grpc.CallOption) (*DetectionResponse, error)
	Transcript(ctx context.Context, in *TranscriptRequest, opts ...grpc.CallOption) (*TranscriptResponse, error)
	// Translate text by Google Translation Service
	TranslateText(ctx context.Context, in *TextTranslationRequest, opts ...grpc.CallOption) (*TextTranslationResponse, error)
	// Performs bidirectional streaming audio translation: receive results after or while
	// sending audio. This method is only available via the gRPC API (not REST).
	StreamingTranslation(ctx context.Context, opts ...grpc.CallOption) (Translation_StreamingTranslationClient, error)
	// Check StreamingTranslationTask results or estimate finish time
	// and maybe other informations related to the task
	StreamingTranslationTask(ctx context.Context, in *StreamingTranslationTaskRequest, opts ...grpc.CallOption) (*StreamingTranslationTaskResponse, error)
}

type translationClient struct {
	cc *grpc.ClientConn
}

func NewTranslationClient(cc *grpc.ClientConn) TranslationClient {
	return &translationClient{cc}
}

func (c *translationClient) TranslateMedia(ctx context.Context, in *MediaTranslationRequest, opts ...grpc.CallOption) (*MediaTranslationResponse, error) {
	out := new(MediaTranslationResponse)
	err := c.cc.Invoke(ctx, "/sagittarius.translation.v1.Translation/TranslateMedia", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *translationClient) DetectLanguage(ctx context.Context, in *DetectionRequest, opts ...grpc.CallOption) (*DetectionResponse, error) {
	out := new(DetectionResponse)
	err := c.cc.Invoke(ctx, "/sagittarius.translation.v1.Translation/DetectLanguage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *translationClient) Transcript(ctx context.Context, in *TranscriptRequest, opts ...grpc.CallOption) (*TranscriptResponse, error) {
	out := new(TranscriptResponse)
	err := c.cc.Invoke(ctx, "/sagittarius.translation.v1.Translation/Transcript", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *translationClient) TranslateText(ctx context.Context, in *TextTranslationRequest, opts ...grpc.CallOption) (*TextTranslationResponse, error) {
	out := new(TextTranslationResponse)
	err := c.cc.Invoke(ctx, "/sagittarius.translation.v1.Translation/TranslateText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *translationClient) StreamingTranslation(ctx context.Context, opts ...grpc.CallOption) (Translation_StreamingTranslationClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Translation_serviceDesc.Streams[0], "/sagittarius.translation.v1.Translation/StreamingTranslation", opts...)
	if err != nil {
		return nil, err
	}
	x := &translationStreamingTranslationClient{stream}
	return x, nil
}

type Translation_StreamingTranslationClient interface {
	Send(*StreamingTranslationRequest) error
	Recv() (*StreamingTranslationResponse, error)
	grpc.ClientStream
}

type translationStreamingTranslationClient struct {
	grpc.ClientStream
}

func (x *translationStreamingTranslationClient) Send(m *StreamingTranslationRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *translationStreamingTranslationClient) Recv() (*StreamingTranslationResponse, error) {
	m := new(StreamingTranslationResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *translationClient) StreamingTranslationTask(ctx context.Context, in *StreamingTranslationTaskRequest, opts ...grpc.CallOption) (*StreamingTranslationTaskResponse, error) {
	out := new(StreamingTranslationTaskResponse)
	err := c.cc.Invoke(ctx, "/sagittarius.translation.v1.Translation/StreamingTranslationTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TranslationServer is the server API for Translation service.
type TranslationServer interface {
	// Translate media(audio or video) by media identity
	TranslateMedia(context.Context, *MediaTranslationRequest) (*MediaTranslationResponse, error)
	// detect the language of text
	DetectLanguage(context.Context, *DetectionRequest) (*DetectionResponse, error)
	Transcript(context.Context, *TranscriptRequest) (*TranscriptResponse, error)
	// Translate text by Google Translation Service
	TranslateText(context.Context, *TextTranslationRequest) (*TextTranslationResponse, error)
	// Performs bidirectional streaming audio translation: receive results after or while
	// sending audio. This method is only available via the gRPC API (not REST).
	StreamingTranslation(Translation_StreamingTranslationServer) error
	// Check StreamingTranslationTask results or estimate finish time
	// and maybe other informations related to the task
	StreamingTranslationTask(context.Context, *StreamingTranslationTaskRequest) (*StreamingTranslationTaskResponse, error)
}

func RegisterTranslationServer(s *grpc.Server, srv TranslationServer) {
	s.RegisterService(&_Translation_serviceDesc, srv)
}

func _Translation_TranslateMedia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MediaTranslationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TranslationServer).TranslateMedia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sagittarius.translation.v1.Translation/TranslateMedia",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TranslationServer).TranslateMedia(ctx, req.(*MediaTranslationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Translation_DetectLanguage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TranslationServer).DetectLanguage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sagittarius.translation.v1.Translation/DetectLanguage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TranslationServer).DetectLanguage(ctx, req.(*DetectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Translation_Transcript_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TranscriptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TranslationServer).Transcript(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sagittarius.translation.v1.Translation/Transcript",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TranslationServer).Transcript(ctx, req.(*TranscriptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Translation_TranslateText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextTranslationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TranslationServer).TranslateText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sagittarius.translation.v1.Translation/TranslateText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TranslationServer).TranslateText(ctx, req.(*TextTranslationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Translation_StreamingTranslation_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TranslationServer).StreamingTranslation(&translationStreamingTranslationServer{stream})
}

type Translation_StreamingTranslationServer interface {
	Send(*StreamingTranslationResponse) error
	Recv() (*StreamingTranslationRequest, error)
	grpc.ServerStream
}

type translationStreamingTranslationServer struct {
	grpc.ServerStream
}

func (x *translationStreamingTranslationServer) Send(m *StreamingTranslationResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *translationStreamingTranslationServer) Recv() (*StreamingTranslationRequest, error) {
	m := new(StreamingTranslationRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Translation_StreamingTranslationTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StreamingTranslationTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TranslationServer).StreamingTranslationTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sagittarius.translation.v1.Translation/StreamingTranslationTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TranslationServer).StreamingTranslationTask(ctx, req.(*StreamingTranslationTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Translation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sagittarius.translation.v1.Translation",
	HandlerType: (*TranslationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TranslateMedia",
			Handler:    _Translation_TranslateMedia_Handler,
		},
		{
			MethodName: "DetectLanguage",
			Handler:    _Translation_DetectLanguage_Handler,
		},
		{
			MethodName: "Transcript",
			Handler:    _Translation_Transcript_Handler,
		},
		{
			MethodName: "TranslateText",
			Handler:    _Translation_TranslateText_Handler,
		},
		{
			MethodName: "StreamingTranslationTask",
			Handler:    _Translation_StreamingTranslationTask_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamingTranslation",
			Handler:       _Translation_StreamingTranslation_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "translation/v1/translation.proto",
}

func init() {
	proto.RegisterFile("translation/v1/translation.proto", fileDescriptor_translation_d48680ae7b2d4c7e)
}

var fileDescriptor_translation_d48680ae7b2d4c7e = []byte{
	// 1348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0x4f, 0x6f, 0x13, 0x47,
	0x14, 0xcf, 0xac, 0xf3, 0x8f, 0xe7, 0x24, 0x38, 0x93, 0x88, 0xb8, 0x06, 0x5a, 0xb3, 0x88, 0x62,
	0xa2, 0xb2, 0x0b, 0x06, 0xb5, 0x34, 0xb4, 0xaa, 0x1a, 0x43, 0x49, 0x04, 0x25, 0xd1, 0xc6, 0x54,
	0x2a, 0xaa, 0x64, 0x2d, 0xbb, 0x63, 0xb3, 0xc5, 0xde, 0x75, 0x77, 0xc7, 0x08, 0x14, 0xe5, 0xc2,
	0xb9, 0xa8, 0x48, 0xbd, 0x71, 0xed, 0x37, 0xa8, 0x7a, 0xe9, 0x07, 0x40, 0x95, 0x7a, 0xe9, 0xa1,
	0xd7, 0x1e, 0xfb, 0x19, 0xaa, 0x1e, 0xab, 0x7d, 0xb3, 0xeb, 0x1d, 0x3b, 0xbb, 0x26, 0x1b, 0xf5,
	0xe6, 0x79, 0x6f, 0xe6, 0xcd, 0x7b, 0xbf, 0xf7, 0xe6, 0xf7, 0xde, 0x1a, 0xaa, 0xdc, 0x37, 0xdd,
	0xa0, 0x6b, 0x72, 0xc7, 0x73, 0xf5, 0xa7, 0x57, 0x75, 0x69, 0xa9, 0xf5, 0x7d, 0x8f, 0x7b, 0xb4,
	0x12, 0x98, 0x1d, 0x87, 0x73, 0xd3, 0x77, 0x06, 0x81, 0x26, 0xab, 0x9f, 0x5e, 0xad, 0x9c, 0xe9,
	0x78, 0x5e, 0xa7, 0xcb, 0x74, 0xb3, 0xef, 0xe8, 0xa6, 0xeb, 0x7a, 0x1c, 0x35, 0x81, 0x38, 0x59,
	0x59, 0x8b, 0xb4, 0x7e, 0xdf, 0xd2, 0x03, 0x6e, 0xf2, 0x41, 0xac, 0xb8, 0x14, 0x29, 0xac, 0xae,
	0x37, 0xb0, 0xf5, 0xa0, 0xcf, 0x98, 0xf5, 0x38, 0xbc, 0x1c, 0xd7, 0x2d, 0xb1, 0x16, 0x5b, 0xd5,
	0x9f, 0x09, 0xac, 0x7d, 0xc9, 0x6c, 0xc7, 0x6c, 0x26, 0x37, 0x1b, 0xec, 0xbb, 0x01, 0x0b, 0x38,
	0xbd, 0x00, 0x4b, 0xbd, 0x50, 0xd5, 0x72, 0x6c, 0xe6, 0x72, 0x87, 0x3f, 0x2f, 0x93, 0x2a, 0xa9,
	0x9d, 0x30, 0x16, 0x51, 0xba, 0x1d, 0x09, 0xe9, 0x79, 0x58, 0xec, 0x9a, 0x6e, 0x67, 0x60, 0x76,
	0x58, 0xcb, 0xf2, 0x6c, 0x56, 0x56, 0x70, 0xd7, 0x42, 0x2c, 0x6c, 0x78, 0x36, 0xa3, 0xa7, 0x60,
	0xb6, 0xed, 0xf9, 0x3d, 0x93, 0x97, 0x0b, 0xa8, 0x8d, 0x56, 0xf4, 0x2c, 0x40, 0xc0, 0x4d, 0x9f,
	0xb7, 0xb8, 0xd3, 0x63, 0xe5, 0xd9, 0x2a, 0xa9, 0x11, 0xe3, 0x04, 0x4a, 0x9a, 0x4e, 0x8f, 0xd1,
	0x55, 0x98, 0x79, 0xec, 0xb8, 0x3c, 0x28, 0xcf, 0xe1, 0x29, 0xb1, 0x50, 0x7f, 0x23, 0x50, 0x3e,
	0xec, 0x74, 0xd0, 0xf7, 0xdc, 0x80, 0xd1, 0x1a, 0xcc, 0x30, 0xdf, 0xf7, 0x7c, 0x74, 0xb6, 0x58,
	0xa7, 0x9a, 0x00, 0x43, 0xf3, 0xfb, 0x96, 0xb6, 0x87, 0x28, 0x19, 0x62, 0x03, 0xbd, 0x05, 0x73,
	0x3e, 0x0b, 0x06, 0x5d, 0x1e, 0x94, 0x95, 0x6a, 0xa1, 0x56, 0xac, 0xaf, 0x6b, 0xd9, 0xb9, 0xd0,
	0xf0, 0x2e, 0xcb, 0x77, 0xfa, 0x7c, 0xdb, 0x6d, 0x7b, 0x46, 0x7c, 0x94, 0xde, 0x84, 0x4a, 0xc0,
	0x7d, 0x66, 0xf6, 0x5a, 0xd2, 0x81, 0x16, 0x37, 0x83, 0x27, 0x2d, 0xc7, 0x8e, 0xa2, 0x5d, 0x13,
	0x3b, 0x24, 0x77, 0x9b, 0x66, 0xf0, 0x64, 0xdb, 0x56, 0x7f, 0x27, 0xb0, 0x34, 0x6a, 0x98, 0xea,
	0xb0, 0xc2, 0x87, 0x92, 0x71, 0xe8, 0x69, 0xa2, 0xca, 0x87, 0x7f, 0x19, 0xe6, 0x7c, 0xd3, 0x7d,
	0xe2, 0xb8, 0x1d, 0x74, 0x49, 0x31, 0xe2, 0x25, 0xa5, 0x30, 0xcd, 0xcd, 0x4e, 0x50, 0x9e, 0xae,
	0x16, 0x6a, 0x27, 0x0c, 0xfc, 0x1d, 0xc2, 0x6e, 0xb3, 0xae, 0xf9, 0xbc, 0x3c, 0x53, 0x25, 0xb5,
	0x82, 0x21, 0x16, 0xf4, 0x5d, 0x00, 0xcb, 0x73, 0xdb, 0xa1, 0x4b, 0x96, 0xc8, 0x95, 0x62, 0x48,
	0x12, 0xf5, 0x7d, 0x28, 0xdd, 0x62, 0x9c, 0x59, 0x72, 0x0d, 0x85, 0xd6, 0xd9, 0x33, 0x1e, 0xb9,
	0x8f, 0xbf, 0x55, 0x1b, 0x96, 0xa5, 0x7d, 0x51, 0xda, 0x76, 0x00, 0xfa, 0x3e, 0xb3, 0x1d, 0x94,
	0x96, 0x09, 0xe6, 0x43, 0x9f, 0x94, 0x8f, 0xa1, 0x89, 0xdd, 0xe1, 0x31, 0x43, 0x32, 0xa1, 0x3e,
	0x84, 0x95, 0x94, 0x2d, 0x87, 0xd1, 0x22, 0x29, 0x68, 0x8d, 0x46, 0xaa, 0x1c, 0x8a, 0xd4, 0x82,
	0xe5, 0x24, 0x6b, 0x71, 0xa8, 0x19, 0x89, 0x9b, 0xce, 0x4c, 0xdc, 0xe4, 0xda, 0x57, 0x5f, 0x2b,
	0x40, 0xe5, 0x5b, 0x72, 0xd7, 0x77, 0x13, 0x8a, 0xc9, 0xad, 0x71, 0x8d, 0xd7, 0x8f, 0x56, 0xe3,
	0xf1, 0x75, 0x5a, 0x63, 0xc0, 0x0c, 0xd9, 0x0c, 0xd5, 0x61, 0xd5, 0x09, 0x5a, 0xcc, 0xb5, 0x5b,
	0x5e, 0xbb, 0x95, 0x28, 0xb0, 0xac, 0xe6, 0x8d, 0x65, 0x27, 0xb8, 0xed, 0xda, 0x3b, 0xed, 0xc4,
	0x52, 0x65, 0x0f, 0x0a, 0x8d, 0x01, 0x1b, 0x8b, 0x96, 0x8c, 0xbf, 0xf4, 0x77, 0x60, 0x3e, 0xb4,
	0x89, 0x4a, 0x05, 0x95, 0x73, 0xcc, 0xb5, 0x51, 0x15, 0xd7, 0x50, 0x41, 0xaa, 0xa1, 0x37, 0x04,
	0x4e, 0xef, 0xe1, 0xa3, 0x72, 0xdc, 0x4e, 0x0a, 0x77, 0x7d, 0x0b, 0xa5, 0x20, 0x56, 0xb7, 0x30,
	0x73, 0x9d, 0x08, 0xb0, 0x4f, 0x27, 0x01, 0x30, 0xc1, 0x64, 0x03, 0x8d, 0x6c, 0x4d, 0x19, 0x27,
	0x87, 0x86, 0x85, 0x88, 0x5e, 0x80, 0x45, 0x73, 0x60, 0x3b, 0x5e, 0x78, 0x0f, 0x67, 0x2e, 0x47,
	0xff, 0x17, 0xb6, 0xa6, 0x8c, 0x05, 0x14, 0x37, 0x84, 0x74, 0x73, 0x05, 0x96, 0x13, 0x97, 0x7c,
	0x61, 0x54, 0x7d, 0xa1, 0xc0, 0xb9, 0xb7, 0x5e, 0x4a, 0x9b, 0x99, 0xd1, 0x5c, 0x8a, 0xd3, 0x8f,
	0xdc, 0xae, 0x45, 0xdc, 0xfe, 0xf4, 0xaa, 0x66, 0x30, 0xcb, 0xeb, 0xb8, 0x4e, 0x68, 0x4b, 0x18,
	0x49, 0xf3, 0x7b, 0x9c, 0xdf, 0x95, 0x34, 0x7e, 0xd7, 0x60, 0x45, 0x84, 0x37, 0xfa, 0x6e, 0x44,
	0x36, 0x96, 0x51, 0x75, 0x4f, 0x7e, 0x3c, 0x57, 0x60, 0x95, 0x9b, 0x7e, 0x87, 0xf1, 0xb1, 0x03,
	0xf1, 0x43, 0x40, 0x9d, 0x7c, 0x42, 0xfd, 0x47, 0x81, 0x33, 0xe9, 0x20, 0xe4, 0xae, 0x79, 0x4b,
	0x46, 0x4a, 0x50, 0x34, 0x46, 0x55, 0xac, 0x7f, 0x98, 0x3f, 0xef, 0xe1, 0xe9, 0x91, 0x84, 0x0b,
	0x11, 0xfd, 0x0a, 0xe6, 0x43, 0x7e, 0x77, 0xdc, 0xb6, 0x87, 0x30, 0x14, 0xeb, 0x37, 0xf2, 0x1a,
	0x47, 0xfe, 0x77, 0xdb, 0xde, 0xd6, 0x94, 0x31, 0xb4, 0x45, 0xbf, 0x86, 0x65, 0x89, 0x41, 0x22,
	0xef, 0xa7, 0xf1, 0x82, 0x1c, 0xad, 0x69, 0x6b, 0xca, 0x28, 0x71, 0xf9, 0x21, 0x0f, 0xba, 0x7c,
	0x73, 0x15, 0xe8, 0x08, 0x2e, 0x88, 0xab, 0xba, 0x01, 0xef, 0x65, 0x39, 0x17, 0x3f, 0xa4, 0x35,
	0x98, 0x8b, 0x7b, 0x99, 0x60, 0xca, 0x59, 0x2e, 0x5a, 0xd7, 0x0f, 0x0a, 0x54, 0xb3, 0x0f, 0xe7,
	0x4e, 0x9c, 0x8c, 0xa9, 0xf2, 0x3f, 0x62, 0xda, 0x84, 0xa5, 0x04, 0x0c, 0x29, 0x63, 0xf9, 0x00,
	0x1d, 0xb3, 0x91, 0xfe, 0x96, 0xbf, 0x49, 0xaf, 0xe2, 0xd8, 0xad, 0x4c, 0x28, 0xc3, 0x9e, 0xc4,
	0x02, 0xee, 0xf4, 0x4c, 0xce, 0x64, 0x02, 0x5c, 0x88, 0x85, 0xd8, 0x0e, 0x7e, 0x21, 0x50, 0xc9,
	0x2e, 0xd3, 0xb0, 0x65, 0x49, 0x64, 0x2c, 0xec, 0x4b, 0x92, 0xb7, 0xb5, 0x34, 0x7a, 0x06, 0x42,
	0x32, 0x7e, 0xe4, 0x74, 0x43, 0x1e, 0x10, 0x23, 0x42, 0x22, 0x18, 0x23, 0xef, 0xe9, 0x49, 0xe4,
	0x3d, 0x33, 0x42, 0xde, 0xea, 0x2b, 0x02, 0xa7, 0x9a, 0xec, 0x19, 0x4f, 0xe1, 0xe8, 0x64, 0x36,
	0x28, 0xc4, 0xbc, 0x9e, 0x49, 0x1e, 0x4a, 0x16, 0x79, 0x84, 0x27, 0x02, 0x6f, 0xe0, 0x5b, 0x2c,
	0x95, 0x9f, 0xa8, 0xd0, 0x8d, 0xd0, 0xcd, 0x5f, 0x04, 0xd6, 0x0e, 0xb9, 0x94, 0xbb, 0x60, 0x8d,
	0xf1, 0xe9, 0x71, 0x62, 0xbd, 0x66, 0xdc, 0x87, 0xf2, 0xe1, 0x2c, 0x59, 0x69, 0xc0, 0x74, 0x28,
	0xa0, 0x17, 0xe1, 0xe4, 0x58, 0x4c, 0x51, 0x46, 0x97, 0x46, 0xc3, 0x19, 0x42, 0xa8, 0x24, 0xad,
	0x71, 0xfd, 0x8b, 0xec, 0x32, 0x44, 0xc0, 0x66, 0x41, 0xd9, 0xb9, 0x5b, 0x9a, 0xa2, 0x8b, 0x30,
	0xdf, 0xd8, 0xb9, 0xdf, 0xdc, 0xbe, 0xff, 0xe0, 0x76, 0xe9, 0xfb, 0x3b, 0xf4, 0x24, 0xc0, 0xde,
	0xdd, 0xed, 0xdd, 0xd6, 0xe7, 0x0f, 0x6e, 0x6d, 0xef, 0x94, 0x5e, 0xde, 0xa9, 0xff, 0x34, 0x0f,
	0x45, 0xe9, 0x3c, 0xfd, 0x23, 0x9e, 0x55, 0xbb, 0x26, 0x67, 0x38, 0x7e, 0xd3, 0x6b, 0x93, 0x42,
	0xce, 0xf8, 0xac, 0xa8, 0x5c, 0xcf, 0x77, 0x28, 0xa2, 0x2a, 0xe3, 0xc5, 0x9f, 0x7f, 0xff, 0xa8,
	0xdc, 0x53, 0xef, 0x84, 0x1f, 0x32, 0xd8, 0xa0, 0xf4, 0xfd, 0xd1, 0xee, 0x75, 0xa0, 0xc7, 0x60,
	0xe9, 0xfb, 0x23, 0xa5, 0x70, 0xa0, 0x27, 0xef, 0x60, 0x63, 0x5f, 0x7c, 0x78, 0x1c, 0x6c, 0x90,
	0x75, 0xfa, 0x8a, 0xc0, 0x92, 0x98, 0x11, 0x87, 0x80, 0x7e, 0x70, 0xa4, 0x91, 0x33, 0x0e, 0xe5,
	0xf2, 0x11, 0x77, 0x47, 0x31, 0x9c, 0xc3, 0x18, 0x4e, 0xab, 0x2b, 0x61, 0x0c, 0x43, 0x67, 0x6d,
	0xdc, 0xb7, 0x21, 0xea, 0xff, 0x35, 0x01, 0x48, 0xd8, 0x87, 0x5e, 0x3e, 0xea, 0xb4, 0x26, 0xfc,
	0xd1, 0xf2, 0x0d, 0x77, 0xea, 0x65, 0x74, 0xe8, 0xa2, 0xaa, 0x0e, 0x3f, 0x4d, 0x51, 0xaf, 0xa7,
	0xcc, 0xb1, 0x21, 0x5e, 0xbf, 0x12, 0x58, 0x1c, 0x56, 0x00, 0x16, 0x6a, 0x3d, 0x57, 0xcd, 0x0b,
	0x27, 0xaf, 0x1d, 0xe3, 0x9d, 0xa8, 0x9f, 0xa1, 0xa7, 0x1f, 0xab, 0xd7, 0xd1, 0x53, 0xf6, 0x8c,
	0x4b, 0xc9, 0x4e, 0x23, 0x8c, 0x03, 0xf9, 0x4b, 0x3b, 0xf4, 0xfd, 0x25, 0x81, 0xd5, 0xb4, 0x67,
	0x41, 0x3f, 0x3a, 0xe6, 0x3c, 0x58, 0xb9, 0x71, 0x8c, 0x81, 0x02, 0x83, 0xa9, 0x91, 0x2b, 0x84,
	0xbe, 0x21, 0x50, 0xce, 0x7a, 0xa6, 0xf4, 0xe6, 0x71, 0x5a, 0x5f, 0xec, 0xd7, 0x27, 0xc7, 0x3b,
	0x1c, 0x01, 0xad, 0x21, 0xd0, 0x35, 0xf5, 0xfc, 0xd8, 0xbf, 0x15, 0x7a, 0xd8, 0xab, 0x42, 0xac,
	0xb1, 0x81, 0x1d, 0xe8, 0x61, 0x1b, 0xdc, 0x20, 0xeb, 0x9b, 0x0d, 0x38, 0x6b, 0x3a, 0x13, 0x6e,
	0xdc, 0x2c, 0x49, 0x37, 0xed, 0xfa, 0x1e, 0xf7, 0x76, 0xc9, 0xc3, 0xa2, 0xb4, 0xe7, 0x5f, 0x42,
	0x1e, 0xcd, 0xe2, 0x9f, 0x11, 0xd7, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xad, 0x90, 0x27, 0x57,
	0x2e, 0x11, 0x00, 0x00,
}
